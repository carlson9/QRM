model = stan_model(model_code = hierCGPRJoint)
#we need polity and gdppc
model
rm(list=ls())
library(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
load('~/Dropbox/CausalGP/modSums/initDevSimplifiedMixedConstantTau.rda')
load('~/Dropbox/CausalGP/modSums/initDevSimplifiedMixConstantTau.rda')
library(quantmod)
getSymbols(Symbols = c('^IXIC', '^FTSE', '^N225'),
from = '2005-03-16',
to = '2014-07-31',
auto.assign = T)
IXIC = as.data.frame(IXIC)
FTSE = as.data.frame(FTSE)
N225 = as.data.frame(N225)
IXIC$date = as.Date(rownames(IXIC))
FTSE$date = as.Date(rownames(FTSE))
N225$date = as.Date(rownames(N225))
IXIC$days = as.numeric(IXIC$date - min(IXIC$date))
FTSE$days = as.numeric(FTSE$date - min(FTSE$date))
N225$days = as.numeric(N225$date - min(N225$date))
IXIC = IXIC[, c('IXIC.Adjusted', 'days')]
FTSE = FTSE[, c('FTSE.Adjusted', 'days')]
N225 = N225[, c('N225.Adjusted', 'days')]
closing = merge(IXIC, FTSE, by = 'days', all = T)
closing = merge(closing, N225, by = 'days', all = T)
#set up the data (include one lag)
closing$IXIClag1[2:nrow(closing)] = closing$IXIC.Adjusted[1:(nrow(closing) - 1)]
closing$FTSElag1[2:nrow(closing)] = closing$FTSE.Adjusted[1:(nrow(closing) - 1)]
closing$N225lag1[2:nrow(closing)] = closing$N225.Adjusted[1:(nrow(closing) - 1)]
closing = na.omit(closing) #we can use GPs to impute in future
y = closing[,2:4]
N = nrow(y)
D = ncol(y)
J = 5
t = closing$days
X = array(NA, dim = c(D,N,J))
for(d in 1:D) X[d,,] = apply(as.matrix(closing[,c(2:7)[-d]]), 2, scale)
summary(fit)$summary[,'mean']
#instantaneous effect of N225 on FTSE
plot(1:dim(X)[2], summary(fit)$summary[paste0('B[2,', 1:dim(X)[2], ',2]'),'mean'], type = 'l')
dim(X)[2]
#instantaneous effect of FTSE on IXIC
plot(1:dim(X)[2], summary(fit)$summary[paste0('B[1,', 1:dim(X)[2], ',1]'),'mean'], type = 'l')
N
mean(summary(fit)$summary
)
paste0('B[2,', 1:dim(X)[2], ',2]')
tail(paste0('B[2,', 1:dim(X)[2], ',2]'))
#instantaneous effect of FTSE on IXIC
mean(summary(fit)$summary[paste0('B[1,', 1:dim(X)[2], ',1]'),'mean'])
dim(X)[2]
summary(fit)$summary[,'mean']
tail(summary(fit)$summary[,'mean'])
#instantaneous effect of N225 on FTSE
plot(1:1994, summary(fit)$summary[paste0('B[2,', 1:1994, ',2]'),'mean'], type = 'l')
t
closing$days
IXIC$date
tail(closing$days)
as.Date(rownames(IXIC))
length(as.Date(rownames(IXIC)))
rownamess(X[1,,])
rownames(X[1,,])
as.Date(rownames(IXIC))
IXIC$date
$date = as.Date(rownames(IXIC))
date = as.Date(rownames(IXIC))
date = c(data, as.Date(rownames(FTSE)))
date = c(date, as.Date(rownames(N225)))
date = unique(date)
date
date = as.Date(rownames(IXIC))
date = c(date, as.Date(rownames(FTSE)))
date = c(date, as.Date(rownames(N225)))
date = unique(date)
date
closing = merge(IXIC, FTSE, by = 'days', all = T)
closing = merge(closing, N225, by = 'days', all = T)
#set up the data (include one lag)
closing$IXIClag1[2:nrow(closing)] = closing$IXIC.Adjusted[1:(nrow(closing) - 1)]
closing$FTSElag1[2:nrow(closing)] = closing$FTSE.Adjusted[1:(nrow(closing) - 1)]
closing$N225lag1[2:nrow(closing)] = closing$N225.Adjusted[1:(nrow(closing) - 1)]
date = date[!is.na(closing$days)]
!is.na(closing)
hold = apply(closing, 1, function(x) any(is.na(x)))
date = date[!hold]
date
tail(date)
summary(fit)$summary[paste0('B[2,', 1:1994, ',2]'),'mean']
summary(fit)$summary[paste0('B[2,', 1:1995, ',2]'),'mean']
date = date[-c(length(date):(length(date) - 5))]
#IXIC, FTSE, N225
#instantaneous effect of N225 on FTSE
mean(summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'])
#IXIC, FTSE, N225
#instantaneous effect of N225 on FTSE
mean(summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'])
#instantaneous effect of FTSE on IXIC
mean(summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'mean'])
#instantaneous effect of IXIC on N225 (cannot be causally prior)
mean(summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'])
#instantaneous effect of N225 on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:1994, ',2]'),'mean'], type = 'l')
date = as.Date(rownames(IXIC))
date = c(date, as.Date(rownames(FTSE)))
date = c(date, as.Date(rownames(N225)))
date = unique(date)
closing = merge(IXIC, FTSE, by = 'days', all = T)
closing = merge(closing, N225, by = 'days', all = T)
#set up the data (include one lag)
closing$IXIClag1[2:nrow(closing)] = closing$IXIC.Adjusted[1:(nrow(closing) - 1)]
closing$FTSElag1[2:nrow(closing)] = closing$FTSE.Adjusted[1:(nrow(closing) - 1)]
closing$N225lag1[2:nrow(closing)] = closing$N225.Adjusted[1:(nrow(closing) - 1)]
hold = apply(closing, 1, function(x) any(is.na(x)))
date = date[!hold]
date = date[-c(length(date):(length(date) - 4))]
#IXIC, FTSE, N225
#instantaneous effect of N225 on FTSE
mean(summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'])
#instantaneous effect of N225 on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l')
#instantaneous effect of N225 on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l')
date
order(date)
date = date[order(date, descending = F)]
order(date, descending = F)
date
order(date)
length(order(date))
length(date)
date[order(date)]
date = date[order(date)]
#instantaneous effect of N225 on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l')
#instantaneous effect of FTSE on IXIC
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'mean'], type = 'l')
#instantaneous effect of IXIC on N225 (cannot be causally prior)
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'], type = 'l')
#lagged effect of N225 on N225
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',5]'),'mean'], type = 'l')
#lagged effect of FTSE on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',4]'),'mean'], type = 'l')
#lagged effect of IXIC on IXIC
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',3]'),'mean'], type = 'l')
#lagged effect of IXIC on N225
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'mean'], type = 'l')
#lagged effect of N225 on N225
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',5]'),'mean'], type = 'l')
#lagged effect of FTSE on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',4]'),'mean'], type = 'l')
#lagged effect of IXIC on IXIC
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',3]'),'mean'], type = 'l')
#lagged effect of IXIC on N225
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'mean'], type = 'l')
#confoumder
plot(date, summary(fit)$summary[paste0('G[', 1:length(date), ']'),'mean'], type = 'l'))
#confoumder
plot(date, summary(fit)$summary[paste0('G[', 1:length(date), ']'),'mean'], type = 'l')
#mixing
#instantaneous effect of N225 on FTSE
plot(date, summary(fit)$summary[paste0('B_mix[2,', 1:length(date), ',2]'),'mean'], type = 'l')
#instantaneous effect of FTSE on IXIC
plot(date, summary(fit)$summary[paste0('B_mix[1,', 1:length(date), ',1]'),'mean'], type = 'l')
#instantaneous effect of IXIC on N225 (cannot be causally prior)
plot(date, summary(fit)$summary[paste0('B_mix[3,', 1:length(date), ',1]'),'mean'], type = 'l')
#lagged effect of N225 on N225
plot(date, summary(fit)$summary[paste0('B_mix[3,', 1:length(date), ',5]'),'mean'], type = 'l')
#lagged effect of FTSE on FTSE
plot(date, summary(fit)$summary[paste0('B_mix[2,', 1:length(date), ',4]'),'mean'], type = 'l')
#lagged effect of IXIC on IXIC
plot(date, summary(fit)$summary[paste0('B_mix[1,', 1:length(date), ',3]'),'mean'], type = 'l')
#lagged effect of IXIC on N225
plot(date, summary(fit)$summary[paste0('B_mix[3,', 1:length(date), ',3]'),'mean'], type = 'l')
#mixing
#instantaneous effect of N225 on FTSE
plot(date, summary(fit)$summary[paste0('B_mix[2,', 1:length(date), ',2]'),'mean'], type = 'l')
#instantaneous effect of FTSE on IXIC
plot(date, summary(fit)$summary[paste0('B_mix[1,', 1:length(date), ',1]'),'mean'], type = 'l')
#instantaneous effect of IXIC on N225 (cannot be causally prior)
plot(date, summary(fit)$summary[paste0('B_mix[3,', 1:length(date), ',1]'),'mean'], type = 'l')
#lagged effect of N225 on N225
plot(date, summary(fit)$summary[paste0('B_mix[3,', 1:length(date), ',5]'),'mean'], type = 'l')
#lagged effect of FTSE on FTSE
plot(date, summary(fit)$summary[paste0('B_mix[2,', 1:length(date), ',4]'),'mean'], type = 'l')
#lagged effect of IXIC on IXIC
plot(date, summary(fit)$summary[paste0('B_mix[1,', 1:length(date), ',3]'),'mean'], type = 'l')
#lagged effect of IXIC on N225
plot(date, summary(fit)$summary[paste0('B_mix[3,', 1:length(date), ',3]'),'mean'], type = 'l')
rm(list=ls())
library(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
load('~/Dropbox/CausalGP/modSums/initDevSimplified.rda')
library(quantmod)
getSymbols(Symbols = c('^IXIC', '^FTSE', '^N225'),
from = '2005-03-16',
to = '2014-07-31',
auto.assign = T)
IXIC = as.data.frame(IXIC)
FTSE = as.data.frame(FTSE)
N225 = as.data.frame(N225)
IXIC$date = as.Date(rownames(IXIC))
FTSE$date = as.Date(rownames(FTSE))
N225$date = as.Date(rownames(N225))
IXIC$days = as.numeric(IXIC$date - min(IXIC$date))
FTSE$days = as.numeric(FTSE$date - min(FTSE$date))
N225$days = as.numeric(N225$date - min(N225$date))
IXIC = IXIC[, c('IXIC.Adjusted', 'days')]
FTSE = FTSE[, c('FTSE.Adjusted', 'days')]
N225 = N225[, c('N225.Adjusted', 'days')]
closing = merge(IXIC, FTSE, by = 'days', all = T)
closing = merge(closing, N225, by = 'days', all = T)
#set up the data (include one lag)
closing$IXIClag1[2:nrow(closing)] = closing$IXIC.Adjusted[1:(nrow(closing) - 1)]
closing$FTSElag1[2:nrow(closing)] = closing$FTSE.Adjusted[1:(nrow(closing) - 1)]
closing$N225lag1[2:nrow(closing)] = closing$N225.Adjusted[1:(nrow(closing) - 1)]
closing = na.omit(closing) #we can use GPs to impute in future
y = closing[,2:4]
N = nrow(y)
D = ncol(y)
J = 5
t = closing$days
X = array(NA, dim = c(D,N,J))
for(d in 1:D) X[d,,] = apply(as.matrix(closing[,c(2:7)[-d]]), 2, scale)
summary(fit)$summary[,'mean']
closing = merge(IXIC, FTSE, by = 'days', all = T)
closing = merge(closing, N225, by = 'days', all = T)
#set up the data (include one lag)
closing$IXIClag1[2:nrow(closing)] = closing$IXIC.Adjusted[1:(nrow(closing) - 1)]
closing$FTSElag1[2:nrow(closing)] = closing$FTSE.Adjusted[1:(nrow(closing) - 1)]
closing$N225lag1[2:nrow(closing)] = closing$N225.Adjusted[1:(nrow(closing) - 1)]
hold = apply(closing, 1, function(x) any(is.na(x)))
date = date[!hold]
closing
hold
date = as.Date(rownames(IXIC))
date = c(date, as.Date(rownames(FTSE)))
date = c(date, as.Date(rownames(N225)))
date = unique(date)
closing = merge(IXIC, FTSE, by = 'days', all = T)
closing = merge(closing, N225, by = 'days', all = T)
#set up the data (include one lag)
closing$IXIClag1[2:nrow(closing)] = closing$IXIC.Adjusted[1:(nrow(closing) - 1)]
closing$FTSElag1[2:nrow(closing)] = closing$FTSE.Adjusted[1:(nrow(closing) - 1)]
closing$N225lag1[2:nrow(closing)] = closing$N225.Adjusted[1:(nrow(closing) - 1)]
hold = apply(closing, 1, function(x) any(is.na(x)))
date = date[!hold]
length(date)
#IXIC, FTSE, N225
#instantaneous effect of N225 on FTSE
mean(summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'])
date = date[-c(length(date):(length(date) - 4))]
date = date[order(date)]
summary(fit)$summary[,'mean']
#IXIC, FTSE, N225
#instantaneous effect of N225 on FTSE
mean(summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'])
#instantaneous effect of FTSE on IXIC
mean(summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'mean'])
#instantaneous effect of IXIC on N225 (cannot be causally prior)
mean(summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'])
#instantaneous effect of N225 on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l')
#instantaneous effect of FTSE on IXIC
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'mean'], type = 'l')
#instantaneous effect of IXIC on N225 (cannot be causally prior)
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'], type = 'l')
#lagged effect of N225 on N225
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',5]'),'mean'], type = 'l')
#lagged effect of FTSE on FTSE
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',4]'),'mean'], type = 'l')
#lagged effect of IXIC on IXIC
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',3]'),'mean'], type = 'l')
#lagged effect of IXIC on N225
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'mean'], type = 'l')
#confoumder
plot(date, summary(fit)$summary[paste0('G[', 1:length(date), ']'),'mean'], type = 'l')
plot(plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l'
xlab = 'Year', ylab = expression(beta)))
plot(plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta)))
plot(plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta)))
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta)))
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta))
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta))
lines(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'2.5%'] + .15, type = 'l', lty = 3)
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(0, .7))
lines(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
cairo_pdf('~/CGPR/figures/N225_FTSE_Ins_.pdf', height = 4, width = 6)
par(mfrow = c(1,1), mgp=c(1,0,0), tcl=0, mar=c(2,3,2,1))
plot(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(0, .7))
lines(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[2,', 1:length(date), ',2]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
dev.off()
#instantaneous effect of FTSE on IXIC
cairo_pdf('~/CGPR/figures/FTSE_IXIC_Ins_.pdf', height = 4, width = 6)
dev.off()
par(mfrow = c(1,1), mgp=c(1,0,0), tcl=0, mar=c(2,3,2,1))
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(0, .7))
lines(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-0.1, .7))
lines(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
cairo_pdf('~/CGPR/figures/FTSE_IXIC_Ins_.pdf', height = 4, width = 6)
par(mfrow = c(1,1), mgp=c(1,0,0), tcl=0, mar=c(2,3,2,1))
plot(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-0.1, .7))
lines(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[1,', 1:length(date), ',1]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
dev.off()
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-0.1, .7))
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta))
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'2.5%'], type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'97.5%'], type = 'l', lty = 3)
abline(h = 0, lty = 2)
cairo_pdf('~/CGPR/figures/IXIC_N225_Ins_.pdf', height = 4, width = 6)
par(mfrow = c(1,1), mgp=c(1,0,0), tcl=0, mar=c(2,3,2,1))
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta))
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'2.5%'], type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'97.5%'], type = 'l', lty = 3)
abline(h = 0, lty = 2)
dev.off()
cairo_pdf('~/CGPR/figures/IXIC_N225_Ins_.pdf', height = 4, width = 6)
par(mfrow = c(1,1), mgp=c(1,0,0), tcl=0, mar=c(2,3,2,1))
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-.35, .35))
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'2.5%'], type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',1]'),'97.5%'], type = 'l', lty = 3)
abline(h = 0, lty = 2)
dev.off()
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'mean'], type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-.35, .35))
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'2.5%'], type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'97.5%'], type = 'l', lty = 3)
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-.35, .35))
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
cairo_pdf('~/CGPR/figures/IXIC_N225_L1_.pdf', height = 4, width = 6)
par(mfrow = c(1,1), mgp=c(1,0,0), tcl=0, mar=c(2,3,2,1))
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-.35, .35))
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
dev.off()
cairo_pdf('~/CGPR/figures/IXIC_N225_L1_.pdf', height = 4, width = 6)
par(mfrow = c(1,1), mgp=c(1,0,0), tcl=0, mar=c(2,3,2,1))
plot(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'mean'] + .15, type = 'l',
xlab = 'Year', ylab = expression(beta), ylim = c(-.1, .35))
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'2.5%'] + .15, type = 'l', lty = 3)
lines(date, summary(fit)$summary[paste0('B[3,', 1:length(date), ',3]'),'97.5%'] + .15, type = 'l', lty = 3)
abline(h = 0, lty = 2)
dev.off()
data = read.csv('~/CGPR/data/income-vs-type-of-political-regime.csv')
data$Year
max(data$Year)
?scale
rm(list=ls())
if(dirname(rstudioapi::getActiveDocumentContext()$path) != '') setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
final_df = read.csv('data.csv')
#running a simple regression on intercommunal violence (not violence with the state):
pop_logit <- glm(intercon ~ country_pop + aggdifxx + gdppc + polity2,
data=final_df,
family = binomial)
summary(pop_logit)
#lets get a tex table
library(stargazer)
stargazer(pop_logit)
#we might prefer Word or HTML
library(jtools)
export_summs(pop_logit, to.file = 'docx')
#exponentiated coefficients
export_summs(pop_logit, exp = T)
#plot summarization
plot_summs(pop_logit)
#exponentiate
plot_summs(pop_logit, exp = T)
#plot predictions
#let's get predicted probabilities with SEs
probs = predict(pop_logit, type = 'response', se.fit = T)
#add uncertainty
lowers = probs$fit - 1.96*probs$se.fit
uppers = probs$fit + 1.96*probs$se.fit
newData = na.omit(final_df[, c('intercon', 'country_pop', 'aggdifxx', 'gdppc', 'polity2')])
plot(probs$fit ~ newData$country_pop, pch = 18)
segments(x0 = newData$country_pop, x1 = newData$country_pop,
y0 = lowers, y1 = uppers)
#very ugly, and not that meaningful
#instead, take the mean of other variables, and allow country_pop to vary
dataToPlot = data.frame('country_pop' = seq(min(newData$country_pop), max(newData$country_pop), length.out = 1000),
'aggdifxx' = mean(newData$aggdifxx),
'gdppc' = mean(newData$gdppc),
'polity2' = mean(newData$polity2))
probs = predict(pop_logit, newdata = dataToPlot, type = 'response', se.fit = T)
lowers = probs$fit - 1.96*probs$se.fit
uppers = probs$fit + 1.96*probs$se.fit
plot(probs$fit ~ dataToPlot$country_pop, type = 'n')
points(dataToPlot$country_pop, lowers, lty = 2, type = 'l')
points(dataToPlot$country_pop, uppers, lty = 2, type = 'l')
polygon(c(rev(dataToPlot$country_pop), dataToPlot$country_pop), c(rev(uppers), lowers), col = 'grey80', border = NA)
points(probs$fit ~ dataToPlot$country_pop, type = 'l')
#add a rug if you want
rug(newData$country_pop)
#in papers, you generally want an intuitive numerical explanation
#not that important for logits, cause of exp, but for GLMs in general
#we take the mean prediction, and subtract the sd
diff(predict(pop_logit, newdata = data.frame(
'country_pop' = c(mean(newData$country_pop), mean(newData$country_pop) - sd(newData$country_pop)),
'aggdifxx' = mean(newData$aggdifxx),
'gdppc' = mean(newData$gdppc),
'polity2' = mean(newData$polity2)
), type = 'response'))
#-0.1248939
#or we might report the max to min
diff(predict(pop_logit, newdata = data.frame(
'country_pop' = c(max(newData$country_pop), min(newData$country_pop)),
'aggdifxx' = mean(newData$aggdifxx),
'gdppc' = mean(newData$gdppc),
'polity2' = mean(newData$polity2)
), type = 'response'))
#-0.438561
#now matched cases
library(MatchIt)
match.out = matchit(I(country_pop > mean(country_pop)) ~
aggdifxx + gdppc + polity2,
data = newData,
method = 'nearest', distance = 'mahalanobis',
replace = T)
matches = as.numeric(match.out$match.matrix)
matches2 = as.numeric(row.names(match.out$match.matrix))
mean(final_df[matches2, 'intercon'] - final_df[matches, 'intercon'])
final_df[matches2[1], 'intercon'] - final_df[matches[1], 'intercon'] #way more meaningful when it's not binary
#now we compare to the null model to check for explanatory power
pop_logitNull <- glm(intercon ~ aggdifxx + gdppc + polity2,
data=final_df,
family = binomial)
#analysis of variance
#we use a chi-squared test here
anova(pop_logit, pop_logitNull, test = 'Chisq')
#highly significant
#two models in one call
stargazer(pop_logit, pop_logitNull)
con_logit <- glm(intercon ~ groupcon + aggdifxx + gdppc + polity2,
data=final_df,
family = binomial)
summary(con_logit)
anova(pop_logit, con_logit)
#model 1 is better
binary_err_rate = function(mod.formula, data, seed = 1234, train = .8, ndraws = 1000){
set.seed(seed)
MSE = c()
for(i in 1:ndraws){ #can parallelize if extra cores are available
samp = sample(1:nrow(data), nrow(data)*train)
train_data = data[samp,]
test_data = data[-samp,]
mod = glm(mod.formula, data = train_data,
family = binomial(link = 'logit'))
probs = predict(mod, test_data, type = 'response')
MSE = c(MSE, mean((probs - (as.numeric(test_data[, as.character(mod.formula[2])]) - 1))^2, na.rm = T))
}
return(mean(MSE))
}
binary_err_rate(mod.formula = pop_logit$formula, data = final_df)
#1.233417
binary_err_rate(mod.formula = con_logit$formula, data = final_df)
#1.235093
#model 1 is better
#now running the ordered logit regression on rebellion score
library(MASS)
pop_olr <- polr(as.factor(rebellion) ~ country_pop + aggdifxx + gdppc + polity2,
data=final_df)
summary(pop_olr)
con_olr <- polr(as.factor(rebellion) ~ groupcon + aggdifxx + gdppc + polity2,
data=final_df)
summary(con_olr)
anova(pop_olr, con_olr)
#model 2 is better
#again, compare to null
pop_olrNull <- polr(as.factor(rebellion) ~ aggdifxx + gdppc + polity2,
data=final_df)
anova(pop_olr, pop_olrNull)
#highly significant
#plot the results of a polr
newData = na.omit(final_df[, c('rebellion', 'country_pop', 'aggdifxx', 'gdppc', 'polity2')])
probs = as.data.frame(predict(pop_olr, newData, se.fit = TRUE, type = 'probs'))
plot(0:8, probs[1,], type = 'b', pch = 18)
for(i in 2:nrow(newData)) points(0:8, probs[i,], type = 'b', pch = 18)
#now work with the same as above to make a more meaningful plot
